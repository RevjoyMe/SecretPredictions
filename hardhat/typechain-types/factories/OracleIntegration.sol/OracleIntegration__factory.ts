/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OracleIntegration,
  OracleIntegrationInterface,
} from "../../OracleIntegration.sol/OracleIntegration";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "DisputeRaised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "finalOutcome",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "disputeVotes",
        type: "uint256",
      },
    ],
    name: "DisputeResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "evidence",
        type: "string",
      },
    ],
    name: "MarketResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum OracleIntegration.OracleType",
        name: "oracleType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dataFeed",
        type: "address",
      },
    ],
    name: "OracleConfigured",
    type: "event",
  },
  {
    inputs: [],
    name: "DISPUTE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_DISPUTE_STAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedOracles",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "enum OracleIntegration.OracleType",
        name: "oracleType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "dataFeed",
        type: "address",
      },
      {
        internalType: "string",
        name: "apiEndpoint",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "consensusOracles",
        type: "address[]",
      },
    ],
    name: "configureOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputeVoteCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "disputeVotes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "emergencyResolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "getOracleConfig",
    outputs: [
      {
        components: [
          {
            internalType: "enum OracleIntegration.OracleType",
            name: "oracleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dataFeed",
            type: "address",
          },
          {
            internalType: "string",
            name: "apiEndpoint",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "consensusOracles",
            type: "address[]",
          },
        ],
        internalType: "struct OracleIntegration.OracleData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "getResolution",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "marketId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "evidence",
            type: "string",
          },
          {
            internalType: "address",
            name: "resolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isDisputed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "disputeDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct OracleIntegration.ResolutionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketOracles",
    outputs: [
      {
        internalType: "enum OracleIntegration.OracleType",
        name: "oracleType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "dataFeed",
        type: "address",
      },
      {
        internalType: "string",
        name: "apiEndpoint",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predictionMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "raiseDispute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resolutions",
    outputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "evidence",
        type: "string",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isDisputed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "disputeDeadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalOutcome",
        type: "bool",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "resolveMarketChainlink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "string",
        name: "evidence",
        type: "string",
      },
    ],
    name: "resolveMarketManual",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizedOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_predictionMarket",
        type: "address",
      },
    ],
    name: "setPredictionMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "string",
        name: "evidence",
        type: "string",
      },
    ],
    name: "submitConsensusVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346100465733608052611a68908161004b8239608051818181610268015281816107f0015281816108450152818161090801528181610f3d01526112490152f35b5f80fdfe6080806040526004361015610012575f80fd5b60e05f35811c91826303abc7521461129e5750816303b88ba21461122157816316e66e94146110c5578163203d82cb1461107857816334b25ee214610f145781633bd2b07914610e315781633e1cf1d814610cce5781634c8d1eda14610c3f57816361c992a314610c0257816376cc96af14610bd8578163799dcaf6146108695781638da5cb5b14610826578163a04382b2146107cd578163a4b7f5ce14610739578163a5bbe22b1461071c578163a5c1674e14610541578163c438ff01146102ae578163c7a6de4d14610234578163d565a53314610124575063def114b6146100fa575f80fd5b34610120575f3660031901126101205760206001600160a01b0360055416604051908152f35b5f80fd5b346101205760209081600319360112610120575f60c0604051610146816113dc565b82815282858201528260408201526060808201528260808201528260a082015201526004355f526001825260405f2060405191610182836113dc565b8154835260ff60018301541684840190151581526002830154604085019081526101ae6003850161142e565b906060860191825261021b6004860154926001600160a01b0392600560808a01988587168a5260ff60a08c019760a01c161515875201549560c08a019687526040519a8b9a818c5251908b015251151560408a01525160608901525185608089015261010088019061137f565b94511660a086015251151560c085015251908301520390f35b34610120576040366003190112610120576102ac6102506112be565b6102586112d4565b906001600160a01b039061028f827f00000000000000000000000000000000000000000000000000000000000000001633146114d0565b165f52600260205260405f209060ff801983541691151516179055565b005b34610120576020806003193601126101205760043590815f525f815260405f2091825460ff8116600481101561052d576001036104e9576001600160a01b03906102fe60ff6003870154166115c6565b60081c169283156104a55760a060049394604051948580927ffeaf968c0000000000000000000000000000000000000000000000000000000082525afa92831561049a575f9361044c575b505f83131561040857906102ac936103fe603e60026103ef9501549261036e8761192d565b906103788561192d565b906040519788937f436861696e6c696e6b2070726963653a20000000000000000000000000000000838601526103b7815180928560318901910161135e565b8401917f2c207468726573686f6c643a200000000000000000000000000000000000000060318401528351938491878501910161135e565b0103601e81018652018461140c565b3393101590611755565b6064846040519062461bcd60e51b82526004820152601260248201527f496e76616c6964207072696365206461746100000000000000000000000000006044820152fd5b90925060a0813d60a011610492575b8161046860a0938361140c565b8101031261012057610479816116c1565b5061048a60808583015192016116c1565b509184610349565b3d915061045b565b6040513d5f823e3d90fd5b6064836040519062461bcd60e51b82526004820152601760248201527f4e6f2064617461206665656420636f6e666967757265640000000000000000006044820152fd5b6064836040519062461bcd60e51b82526004820152601460248201527f4e6f7420436861696e6c696e6b206f7261636c650000000000000000000000006044820152fd5b634e487b7160e01b5f52602160045260245ffd5b6020806003193601126101205760043567016345785d8a000034106106d857805f526001825260405f20600281015480156106945760048201805460ff8160a01c166106505762015180928381018091116105f857421161060c5760ff60a01b197401000000000000000000000000000000000000000091161790554201908142116105f857600501557fe0e58e9cc5ed7ef092d3e14cff6136d23ebf75a16cf3c8257ef8804811d8b0f3604051923484523393a3005b634e487b7160e01b5f52601160045260245ffd5b6064866040519062461bcd60e51b82526004820152601460248201527f4469737075746520706572696f6420656e6465640000000000000000000000006044820152fd5b6064866040519062461bcd60e51b82526004820152601060248201527f416c7265616479206469737075746564000000000000000000000000000000006044820152fd5b6064846040519062461bcd60e51b82526004820152601360248201527f4d61726b6574206e6f74207265736f6c766564000000000000000000000000006044820152fd5b6064826040519062461bcd60e51b82526004820152601a60248201527f496e73756666696369656e742064697370757465207374616b650000000000006044820152fd5b34610120575f366003190112610120576020604051620151808152f35b34610120576020366003190112610120576004355f52600160205260405f2080549060ff6001820154169260ff6107a960028401549261077b6003860161142e565b906005600487015496015494604051988998895215156020890152604088015280606088015286019061137f565b926001600160a01b038116608086015260a01c16151560a084015260c08301520390f35b34610120576102ac6108206107e136611311565b93906108176001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633146114d0565b33943691611590565b91611755565b34610120575f3660031901126101205760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101205760c03660031901126101205760043560249060048235101561012057604435916001600160a01b038316928381036101205767ffffffffffffffff606435818111610120576108c19036906004016112e3565b918060a435116101205736602360a435011215610120578060a435600401351161012057368560a4356004013560051b60a4350101116101205761092f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633146114d0565b855f525f60205260405f209374ffffffffffffffffffffffffffffffffffffffff0085549160081b169074ffffffffffffffffffffffffffffffffffffffffff1960ff8835169116171784558211610bc55761099b8261099260018601546113a4565b6001860161167e565b5f90601f8311600114610b58576109c992915f9183610b4d575b50508160011b915f199060031b1c19161790565b60018201555b60843560028201556003808201805460ff19166001179055426004830155823514610a2b575b5060207fbc065c247f5a8faa5e96b3a1917d71b14b086e500e71f897fa8b58fc6319d3c091610a28604051809235611351565ba3005b600360a4356004013510610ae3576005016801000000000000000060a4356004013511610ad0578054600460a43501358083558111610aae575b505f908152602081209060a43583015b60a435600401358210610a895750506109f5565b8035916001600160a01b03831683036101205760206001920192818501550190610a75565b610aca90825f5260205f209081019060a4356004013501611668565b84610a65565b50634e487b7160e01b5f5260416004525ffd5b60848260216040519162461bcd60e51b8352602060048401528201527f4e656564206174206c65617374203320636f6e73656e737573206f7261636c6560448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b0135905087806109b5565b600184939293015f5260205f20905f935b601f1984168510610bad576001945083601f19811610610b94575b505050811b0160018201556109cf565b01355f19600384901b60f8161c19169055868080610b84565b81810135835560209485019460019093019201610b69565b83634e487b7160e01b5f5260416004525ffd5b34610120576020366003190112610120576004355f526004602052602060405f2054604051908152f35b34610120576020366003190112610120576001600160a01b03610c236112be565b165f526002602052602060ff60405f2054166040519015158152f35b34610120576020366003190112610120576004355f525f6020526001600160a01b0360405f20805490610c746001820161142e565b600282015491610cb8600460ff600384015416920154926040519686610c9e8960ff819a16611351565b60081c16602087015260c0604087015260c086019061137f565b9260608501521515608084015260a08301520390f35b346101205760208060031936011261012057606060c0604051610cf0816113dc565b5f81525f848201528260408201525f838201525f60808201525f60a082015201526004355f525f815260405f2091604051610d2a816113dc565b83549060ff821690600482101561052d57849286928252836001600160a01b0392838282019360081c168352600194610d656001820161142e565b9360408301948552610ddc600283015495606085019687528760ff60038601541693608087019415158552610dc3610dab600560048901549860a08b01998a5201611611565b9760c081019889526040519d8e818152019051611351565b511660408b0152518a60608b01526101008a019061137f565b9451608089015251151560a08801525160c08701525195601f1986840301908601528080875193848152019601925f905b838210610e1a5786880387f35b845181168852968201969382019390850190610e0d565b3461012057610e3f36611311565b91929092335f52600260205260ff60405f20541615610ed057815f525f60205260405f2060ff815416600481101561052d57610e8c576102ac9461081760ff6003610820940154166115c6565b606460405162461bcd60e51b815260206004820152601160248201527f4e6f74206d616e75616c206f7261636c650000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601560248201527f4e6f7420617574686f72697a6564206f7261636c6500000000000000000000006044820152fd5b3461012057604036600319011261012057600435610f306112d4565b610f646001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633146114d0565b815f52600160205260405f20600481019160ff835460a01c16156110345760058201544210610ff0577f5add0b1fc2a3dfd95be33d1d5feb6709087e50213b7a73c3c3b2c387001221e792610fca826001604095019060ff801983541691151516179055565b60ff60a01b198154169055835f526004602052815f2054825191151582526020820152a2005b606460405162461bcd60e51b815260206004820152601860248201527f4469737075746520706572696f64206e6f7420656e64656400000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601160248201527f4e6f2061637469766520646973707574650000000000000000000000000000006044820152fd5b34610120576040366003190112610120576024356001600160a01b038116809103610120576004355f52600360205260405f20905f52602052602060ff60405f2054166040519015158152f35b34610120576110d336611311565b919290815f5260205f815260405f2060ff8082541696600488101561052d5761113a906111036003809a1461151b565b6111156111103389611700565b61151b565b865f526003855260405f20335f52855260405f209060ff801983541691151516179055565b845f526004835260405f2061114f8154611566565b9055845f5260048352600560405f2054920154916001928060011b90808204600214901517156105f85760039004111561118557005b845f525f835261119a600560405f2001611611565b925f97835f905b6111c2575b50505050506102ac94610820915160011c109130943691611590565b855181101561121c57875f5281835260405f206001600160a01b036111e783896116d8565b51165f5283528360405f205416611201575b8401846111a1565b98908461121081959493611566565b9a9192939450506111f9565b6111a6565b346101205760203660031901126101205761123a6112be565b6001600160a01b0390611270827f00000000000000000000000000000000000000000000000000000000000000001633146114d0565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060055416176005555f80f35b34610120575f366003190112610120578067016345785d8a000060209252f35b600435906001600160a01b038216820361012057565b60243590811515820361012057565b9181601f840112156101205782359167ffffffffffffffff8311610120576020838186019501011161012057565b60606003198201126101205760043591602435801515810361012057916044359067ffffffffffffffff82116101205761134d916004016112e3565b9091565b90600482101561052d5752565b5f5b83811061136f5750505f910152565b8181015183820152602001611360565b906020916113988151809281855285808601910161135e565b601f01601f1916010190565b90600182811c921680156113d2575b60208310146113be57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916113b3565b60e0810190811067ffffffffffffffff8211176113f857604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176113f857604052565b9060405191825f8254611440816113a4565b908184526020946001916001811690815f146114ae5750600114611470575b50505061146e9250038361140c565b565b5f90815285812095935091905b81831061149657505061146e93508201015f808061145f565b8554888401850152948501948794509183019161147d565b9250505061146e94925060ff191682840152151560051b8201015f808061145f565b156114d757565b606460405162461bcd60e51b815260206004820152600960248201527f4e6f74206f776e657200000000000000000000000000000000000000000000006044820152fd5b1561152257565b606460405162461bcd60e51b815260206004820152601460248201527f4e6f7420636f6e73656e737573206f7261636c650000000000000000000000006044820152fd5b5f1981146105f85760010190565b67ffffffffffffffff81116113f857601f01601f191660200190565b92919261159c82611574565b916115aa604051938461140c565b829481845281830111610120578281602093845f960137010152565b156115cd57565b606460405162461bcd60e51b815260206004820152601160248201527f4f7261636c65206e6f74206163746976650000000000000000000000000000006044820152fd5b90604051918281549182825260209260208301915f5260205f20935f905b8282106116455750505061146e9250038361140c565b85546001600160a01b03168452600195860195889550938101939091019061162f565b818110611673575050565b5f8155600101611668565b9190601f811161168d57505050565b61146e925f5260205f20906020601f840160051c830193106116b7575b601f0160051c0190611668565b90915081906116aa565b519069ffffffffffffffffffff8216820361012057565b80518210156116ec5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b5f525f602052611715600560405f2001611611565b905f5b825181101561174e576001600160a01b038061173483866116d8565b51169083161461174657600101611718565b505050600190565b5050505f90565b9190825f5260019060209160018352604093845f20916002830180546118ea5787845561179185600186019060ff801983541691151516179055565b4290558151600384019167ffffffffffffffff82116113f8576117be826117b885546113a4565b8561167e565b8690601f8311600114611887575090806117ec925f9161187c575b508160011b915f199060031b1c19161790565b90555b6001600160a01b03600483019716968774ffffffffffffffffffffffffffffffffffffffffff19825416179055620151804201948542116105f8577f17fadd484298b74931ca66be78c452c4e6d66b66682d7bf575d3b6cabec20d0d956005611877940155865f525f8552426004825f2001558080519586951515865285015283019061137f565b0390a3565b90508401515f6117d9565b90601f198316845f52885f20925f905b8a8383106118d35750505090836001949392106118bb575b5050811b0190556117ef565b8501515f1960f88460031b161c191690555f806118af565b818596829394968b01518155019501930190611897565b60648688519062461bcd60e51b82526004820152601060248201527f416c7265616479207265736f6c766564000000000000000000000000000000006044820152fd5b80156119e7575f81805b6119d3575061194581611574565b90611953604051928361140c565b808252601f1961196282611574565b01366020840137915b829080156119cc57600a9160309483830686018096116105f85780156105f8575f19019484518610156116ec5760f81b7fff00000000000000000000000000000000000000000000000000000000000000165f1a908401601f01530461196b565b5050905090565b906119df600a91611566565b910480611937565b506040516040810181811067ffffffffffffffff8211176113f857604052600181527f300000000000000000000000000000000000000000000000000000000000000060208201529056fea26469706673582212204e3bcc10f93ef6338558f0a26052a1df37e16a68e4327c60d3b2667ea08531b664736f6c63430008180033";

type OracleIntegrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleIntegrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleIntegration__factory extends ContractFactory {
  constructor(...args: OracleIntegrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OracleIntegration & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OracleIntegration__factory {
    return super.connect(runner) as OracleIntegration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleIntegrationInterface {
    return new Interface(_abi) as OracleIntegrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OracleIntegration {
    return new Contract(address, _abi, runner) as unknown as OracleIntegration;
  }
}
