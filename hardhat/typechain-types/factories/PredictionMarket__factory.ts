/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PredictionMarket,
  PredictionMarketInterface,
} from "../PredictionMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_encryptedBetting",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracleIntegration",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "question",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "MarketResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PayoutClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "MARKET_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedOracles",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "claimPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "question",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "createMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "encryptedBetting",
    outputs: [
      {
        internalType: "contract EncryptedBetting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "question",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resolutionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creationTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct IPredictionMarket.Market",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "euint64",
            name: "encryptedYesAmount",
            type: "uint256",
          },
          {
            internalType: "euint64",
            name: "encryptedNoAmount",
            type: "uint256",
          },
          {
            internalType: "euint32",
            name: "encryptedBetCount",
            type: "uint256",
          },
          {
            internalType: "ebool",
            name: "hasPosition",
            type: "uint256",
          },
        ],
        internalType: "struct IPredictionMarket.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "question",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resolutionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "state",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextMarketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleIntegration",
    outputs: [
      {
        internalType: "contract OracleIntegration",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encryptedAmount",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encryptedOutcome",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
    ],
    name: "resolveMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizedOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e034620000ed57601f62001b0a38819003918201601f19168301916001600160401b03831184841017620000f157808492606094604052833981010312620000ed576200004d8162000105565b620000696040620000616020850162000105565b930162000105565b600160035533608052600480546001600160a01b0319166001600160a01b0393841617905591811660a0521660c0526040516119ef90816200011b823960805181818161074f01528181610808015281816109e10152610a8e015260a0518181816105200152818161099401528181610aff0152610e92015260c05181610a4a0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b0382168203620000ed5756fe608080604052600436101561001c575b50361561001a575f80fd5b005b5f905f3560e01c90816336796b5c1461166357508063406ef2ef14611646578063494dc73c1461107657806357bde44614610db357806361c992a314610d765780636540742f14610d555780637e95b52314610d335780638a69614e14610ab25780638da5cb5b14610a6e5780639c6f117714610a2a578063a42dce80146109b8578063a85a9c8f14610974578063b1283e7714610876578063c415b95c1461084f578063c7a6de4d146107d3578063db2e21bc14610730578063ea27ab98146103e2578063eb02c3011461032a5763eb44fdd30361000f573461032757602036600319011261032757806040916101a0835161011881611708565b828152606060208201526060858201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152015260043515158061031a575b61017f906118a9565b60043581528060205220600c6040519161019883611708565b805483526101a860018201611777565b60208401526101b960028201611777565b60408401526003810154606084015260048101546080840152600581015460a08401526001600160a01b03600682015460ff8116151560c086015260081c1660e0840152600781015461010084015260088101546101208401526009810154610140840152600a8101546101608401526001600160a01b03600b8201541661018084015201546101a0820152604051809160208252805160208301526101a061028c61027660208401516101c060408701526101e0860190611819565b6040840151858203601f19016060870152611819565b9160608101516080850152608081015160a085015260a081015160c085015260c0810151151560e08501526001600160a01b0360e0820151166101008501526101008101516101208501526101208101516101408501526101408101516101608501526101608101516101808501526001600160a01b03610180820151168285015201516101c08301520390f35b5060035460043510610176565b80fd5b5034610327576020806003193601126103de576040608092600435816060845161035381611739565b828152828782015282868201520152801515806103d3575b610374906118a9565b81526001835220335f52815260405f206040519061039182611739565b80549283835260018201548184019081526060600360028501549460408701958652015494019384526040519485525190840152516040830152516060820152f35b50600354811061036b565b5080fd5b5060803660031901126103275767ffffffffffffffff6004356024803583811161072c5761041490369060040161167d565b93906044358281116107285761042e90369060040161167d565b926064359081116107245761044790369060040161167d565b9286151580610719575b61045a906118a9565b868952602097898952610474600560408c200154156118f4565b878a52898952600360408b2001544210156106d657662386f26fc10000341015806106c4575b1561068157906104ab913691611873565b6104b6368584611873565b50878180518101031261067d576104de92886104d6920151953691611873565b923691611873565b5084818051810103126106795784015180151581036106795715610672576001905b34810361066857600160ff815b1603610625579085916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b1561061657608484928360ff9560405196879586947f2430719b0000000000000000000000000000000000000000000000000000000086528c6004870152338c87015260448601521660648401525af1801561061a57610602575b50829052838352600760408520018054913483018093116105f05750556040519183835242908301527f4af71b021e799c62c158bd54636ca8da2fa26115a21a2dc6efe486ec104fd15f60403393a380f35b634e487b7160e01b5f5260116004525ffd5b61060b90611725565b61061657835f61059e565b8380fd5b6040513d84823e3d90fd5b606485600f856040519262461bcd60e51b845260048401528201527f416d6f756e74206d69736d6174636800000000000000000000000000000000006044820152fd5b600160ff8761050d565b8490610500565b8580fd5b5f80fd5b6064896012896040519262461bcd60e51b845260048401528201527f496e76616c69642062657420616d6f756e7400000000000000000000000000006044820152fd5b50678ac7230489e8000034111561049a565b606489600c896040519262461bcd60e51b845260048401528201527f4d61726b657420656e64656400000000000000000000000000000000000000006044820152fd5b506003548710610451565b8780fd5b8680fd5b8480fd5b5034610327578060031936011261032757808080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661077a81331461196e565b47905af161078661193f565b501561078f5780f35b606460405162461bcd60e51b815260206004820152601160248201527f5769746864726177616c206661696c65640000000000000000000000000000006044820152fd5b50346103275760403660031901126103275761084c6107f06116ab565b6107f86116c1565b906001600160a01b039061082f827f000000000000000000000000000000000000000000000000000000000000000016331461196e565b1683526002602052604083209060ff801983541691151516179055565b80f35b503461032757806003193601126103275760206001600160a01b0360045416604051908152f35b503461032757602036600319011261032757600435815280602052604090208054600182016108a490611777565b916108b160028201611777565b6003820154916004810154600582015460068301546007840154600885015491600986015493600a87015495600b8801546001600160a01b031697600c0154986040519c8d809d6101c09182918152602001528d0161090f91611819565b8c810360408e015261092091611819565b9960608c015260808b015260a08a015260ff8116151560c08a015260081c6001600160a01b031660e08901526101008801526101208701526101408601526101608501526101808401526101a08301520390f35b503461032757806003193601126103275760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5034610327576020366003190112610327576109d26116ab565b6001600160a01b0390610a08827f000000000000000000000000000000000000000000000000000000000000000016331461196e565b1673ffffffffffffffffffffffffffffffffffffffff19600454161760045580f35b503461032757806003193601126103275760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461032757806003193601126103275760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461067d5760208060031936011261067d5760043580151580610d28575b610ada906118a9565b805f525f825260405f20916002600584015403610ce45760ff60066001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169401541692604051937f87c8e2d6000000000000000000000000000000000000000000000000000000008552836004860152336024860152151560448501528184606481845afa938415610c66575f94610cb5575b508315610c7157803b1561067d575f80916044604051809481937fd5dfa74a0000000000000000000000000000000000000000000000000000000083528860048401523360248401525af18015610c6657610c53575b508380808086335af1610bdb61193f565b5015610c0f577fe97cee5a4c0549d3fdc81e322b718ddf0aeb3418ec87dce4f9a7fb28d117c312906040519384523393a380f35b6064906040519062461bcd60e51b82526004820152601660248201527f5061796f7574207472616e73666572206661696c6564000000000000000000006044820152fd5b610c5e919450611725565b5f925f610bca565b6040513d5f823e3d90fd5b6064826040519062461bcd60e51b82526004820152601360248201527f4e6f207061796f757420617661696c61626c65000000000000000000000000006044820152fd5b9093508181813d8311610cdd575b610ccd8183611755565b8101031261067d5751925f610b74565b503d610cc3565b6064906040519062461bcd60e51b82526004820152601360248201527f4d61726b6574206e6f74207265736f6c766564000000000000000000000000006044820152fd5b506003548110610ad1565b3461067d575f36600319011261067d576020604051678ac7230489e800008152f35b3461067d575f36600319011261067d576020604051662386f26fc100008152f35b3461067d57602036600319011261067d576001600160a01b03610d976116ab565b165f526002602052602060ff60405f2054166040519015158152f35b3461067d57604036600319011261067d57600435610dcf6116c1565b8115158061106b575b610de1906118a9565b815f5260205f81526001600160a01b0380600660405f20015460081c1633148015611056575b1561101257835f525f825260405f2060058101610e258154156118f4565b60038201544210610fce5760029055610e4d84600683019060ff801983541691151516179055565b600442910155835f525f825260405f206040517f77ab1d48000000000000000000000000000000000000000000000000000000008152856004820152604081602481867f0000000000000000000000000000000000000000000000000000000000000000165afa908115610c66575f905f92610f95575b5060088301556009820155600c600782015491015490818102918183041490151715610f81575f80809361271082940490600454165af1610f0361193f565b5015610f3d577f6d4d544f5a6dcf38d77a232d3ef7358625c74877a1ad954fcb507872e7a05eaf91604091825191151582524290820152a2005b6064906040519062461bcd60e51b82526004820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b634e487b7160e01b5f52601160045260245ffd5b9150506040813d604011610fc6575b81610fb160409383611755565b8101031261067d578381519101519087610ec4565b3d9150610fa4565b6064846040519062461bcd60e51b82526004820152601360248201527f4d61726b6574207374696c6c20616374697665000000000000000000000000006044820152fd5b6064826040519062461bcd60e51b82526004820152601560248201527f4e6f7420617574686f72697a6564206f7261636c6500000000000000000000006044820152fd5b50335f526002825260ff60405f205416610e07565b506003548210610dd8565b3461067d57608036600319011261067d5760043567ffffffffffffffff811161067d576110a790369060040161167d565b60243567ffffffffffffffff811161067d576110c790369060040161167d565b60643592916001600160a01b038416840361067d57610e104201804211610f815760443511156116025782156115be576001600160a01b0384161561157a57600354935f198514610f815761114c6001600160a01b0392600187016003556040519461113286611708565b87865261114036888b611873565b60208701523691611873565b604084015260443560608401525f60808401525f60a08401525f60c08401521660e08201525f6101008201525f6101208201525f610140820152426101608201523361018082015261012c6101a0820152825f525f60205260405f2081518155602082015180519067ffffffffffffffff821161149d5781906111d260018501546116d0565b601f811161152a575b50602090601f83116001146114bc575f926114b1575b50508160011b915f199060031b1c19161760018201555b60408201519182519267ffffffffffffffff841161149d5761122d60028401546116d0565b601f8111611459575b50916020969186938890601f87116001146113c35791867f57d0d124b72f81ed1da0dc728fc33db342705974792928796f6577b8db5c3d5396976101a093600c955f926113b8575b50508160011b915f199060031b1c19161760028501555b606081015160038501556080810151600485015560a08101516005850155600684016112d360c08301511515829060ff801983541691151516179055565b60e08201517fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055610100810151600785015561012081015160088501556101408101516009850155610160810151600a850155600b84016001600160a01b036101808301511673ffffffffffffffffffffffffffffffffffffffff19825416179055015191015583604051916040835281604084015260608301375f60608583010152604435868201526060813395601f80199101168101030190a3604051908152f35b015190508c8061127e565b9590600284015f52895f20965f5b601f198416811061143f5750827f57d0d124b72f81ed1da0dc728fc33db342705974792928796f6577b8db5c3d539798600c95936001936101a096601f19811610611427575b505050811b016002850155611295565b01515f1960f88460031b161c191690558c8080611417565b8282015189556001909801978a9750918b01918b016113d1565b600284015f5260205f20601f860160051c810160208710611496575b601f830160051c8201811061148b575050611236565b5f8155600101611475565b5080611475565b634e487b7160e01b5f52604160045260245ffd5b0151905087806111f1565b9250600184015f5260205f20905f935b601f198416851061150f576001945083601f198116106114f7575b505050811b016001820155611208565b01515f1960f88460031b161c191690558780806114e7565b818101518355602094850194600190930192909101906114cc565b909150600184015f5260205f20601f840160051c810160208510611573575b90849392915b601f830160051c820181106115655750506111db565b5f815585945060010161154f565b5080611549565b606460405162461bcd60e51b815260206004820152600f60248201527f4f7261636c6520726571756972656400000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601160248201527f5175657374696f6e2072657175697265640000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601160248201527f456e642074696d6520746f6f20736f6f6e0000000000000000000000000000006044820152fd5b3461067d575f36600319011261067d576020600354604051908152f35b3461067d575f36600319011261067d578061012c60209252f35b9181601f8401121561067d5782359167ffffffffffffffff831161067d576020838186019501011161067d57565b600435906001600160a01b038216820361067d57565b60243590811515820361067d57565b90600182811c921680156116fe575b60208310146116ea57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916116df565b6101c0810190811067ffffffffffffffff82111761149d57604052565b67ffffffffffffffff811161149d57604052565b6080810190811067ffffffffffffffff82111761149d57604052565b90601f8019910116810190811067ffffffffffffffff82111761149d57604052565b9060405191825f8254611789816116d0565b908184526020946001916001811690815f146117f757506001146117b9575b5050506117b792500383611755565b565b5f90815285812095935091905b8183106117df5750506117b793508201015f80806117a8565b855488840185015294850194879450918301916117c6565b925050506117b794925060ff191682840152151560051b8201015f80806117a8565b91908251928382525f5b848110611843575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611823565b67ffffffffffffffff811161149d57601f01601f191660200190565b92919261187f82611857565b9161188d6040519384611755565b82948184528183011161067d578281602093845f960137010152565b156118b057565b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206d61726b65740000000000000000000000000000000000006044820152fd5b156118fb57565b606460405162461bcd60e51b815260206004820152601160248201527f4d61726b6574206e6f74206163746976650000000000000000000000000000006044820152fd5b3d15611969573d9061195082611857565b9161195e6040519384611755565b82523d5f602084013e565b606090565b1561197557565b606460405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152fdfea2646970667358221220c74062dc8d00b34ad1acee7150ce399cb84d1b563803f1ba32602f37d4f0936d64736f6c63430008180033";

type PredictionMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionMarket__factory extends ContractFactory {
  constructor(...args: PredictionMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeCollector: AddressLike,
    _encryptedBetting: AddressLike,
    _oracleIntegration: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeCollector,
      _encryptedBetting,
      _oracleIntegration,
      overrides || {}
    );
  }
  override deploy(
    _feeCollector: AddressLike,
    _encryptedBetting: AddressLike,
    _oracleIntegration: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeCollector,
      _encryptedBetting,
      _oracleIntegration,
      overrides || {}
    ) as Promise<
      PredictionMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PredictionMarket__factory {
    return super.connect(runner) as PredictionMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionMarketInterface {
    return new Interface(_abi) as PredictionMarketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PredictionMarket {
    return new Contract(address, _abi, runner) as unknown as PredictionMarket;
  }
}
